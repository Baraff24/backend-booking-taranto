openapi: 3.0.3
info:
  title: Backend Booking Taranto APIs
  version: 1.0.0
  description: GM Apartments Booking Taranto APIs
paths:
  /api/v1/accounts/cancel-reservation/:
    post:
      operationId: accounts_cancel_reservation_create
      description: Cancel a reservation and process a refund
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelReservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelReservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelReservation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelReservation'
          description: ''
  /api/v1/accounts/checkin-category-choices/:
    get:
      operationId: accounts_checkin_category_choices_retrieve
      description: |-
        API View to return check-in category choices.
        If a 'category' parameter is provided, it returns choices for that specific category.
        If no parameter is provided, it returns all choices across all categories.
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckinCategoryChoices'
          description: ''
  /api/v1/accounts/discount/calculate-discount/:
    post:
      operationId: accounts_discount_calculate_discount_create
      description: Calculate the discount for a reservation
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CalculateDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CalculateDiscount'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateDiscount'
          description: ''
  /api/v1/accounts/discounts/:
    get:
      operationId: accounts_discounts_list
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
          description: ''
    post:
      operationId: accounts_discounts_create
      description: A viewset for viewing and editing discount instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/v1/accounts/discounts/{id}/:
    get:
      operationId: accounts_discounts_retrieve
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: accounts_discounts_update
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: accounts_discounts_partial_update
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: accounts_discounts_destroy
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/download-dms-puglia-xml-file/{id}/:
    get:
      operationId: accounts_download_dms_puglia_xml_file_retrieve
      description: API to download the DMS Puglia XML file.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounts/google-calendar/init/:
    get:
      operationId: accounts_google_calendar_init_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounts/google-calendar/redirect/:
    get:
      operationId: accounts_google_calendar_redirect_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/list-dms-puglia-xml-files/:
    get:
      operationId: accounts_list_dms_puglia_xml_files_retrieve
      description: API to list all the available DMS Puglia XML files.
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DmsPugliaXml'
          description: ''
  /api/v1/accounts/reservations/:
    get:
      operationId: accounts_reservations_list
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: query
        name: check_in
        schema:
          type: string
          format: date
      - in: query
        name: check_out
        schema:
          type: string
          format: date
      - in: query
        name: created_at_gte
        schema:
          type: string
          format: date-time
      - in: query
        name: created_at_lte
        schema:
          type: string
          format: date-time
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: room
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
          description: ''
    post:
      operationId: accounts_reservations_create
      description: A viewset for viewing and editing reservation instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/v1/accounts/reservations/{id}/:
    get:
      operationId: accounts_reservations_retrieve
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    put:
      operationId: accounts_reservations_update
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    patch:
      operationId: accounts_reservations_partial_update
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    delete:
      operationId: accounts_reservations_destroy
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/room/available-rooms-for-dates/:
    get:
      operationId: accounts_room_available_rooms_for_dates_retrieve
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableRoomsForDates'
          description: ''
  /api/v1/accounts/room/create-room/:
    post:
      operationId: accounts_room_create_room_create
      description: Create a room and associated Google Calendar
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/v1/accounts/room/rent-room/:
    post:
      operationId: accounts_room_rent_room_create
      description: Rent a room
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/v1/accounts/rooms/:
    get:
      operationId: accounts_rooms_list
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: query
        name: cost_per_night
        schema:
          type: number
      - in: query
        name: max_people
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: structure
        schema:
          type: integer
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
          description: ''
    post:
      operationId: accounts_rooms_create
      description: A viewset for viewing and editing room instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/v1/accounts/rooms/{id}/:
    get:
      operationId: accounts_rooms_retrieve
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    put:
      operationId: accounts_rooms_update
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    patch:
      operationId: accounts_rooms_partial_update
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    delete:
      operationId: accounts_rooms_destroy
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/rooms/{id}/images/:
    get:
      operationId: accounts_rooms_images_retrieve
      description: Get all images of a room
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomImage'
          description: ''
  /api/v1/accounts/rooms/{id}/images/add/:
    post:
      operationId: accounts_rooms_images_add_create
      description: Add an image to a room
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoomImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoomImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoomImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoomImage'
          description: ''
  /api/v1/accounts/rooms/images/{id}/delete/:
    delete:
      operationId: accounts_rooms_images_delete_destroy
      description: Delete an image from a room
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/send-elenco-schedine/:
    post:
      operationId: accounts_send_elenco_schedine_create
      description: API View to send the Elenco Schedine to the DMS.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendElencoSchedine'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendElencoSchedine'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendElencoSchedine'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendElencoSchedine'
          description: ''
  /api/v1/accounts/send-whatsapp-to-all-users/:
    post:
      operationId: accounts_send_whatsapp_to_all_users_create
      description: Handles POST requests to send a WhatsApp message to all users.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendWhatsAppToAllUsers'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendWhatsAppToAllUsers'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendWhatsAppToAllUsers'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendWhatsAppToAllUsers'
          description: ''
  /api/v1/accounts/stripe-webhook/:
    post:
      operationId: accounts_stripe_webhook_create
      description: API to handle Stripe webhooks
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/stripe/create-checkout-session/:
    post:
      operationId: accounts_stripe_create_checkout_session_create
      description: Create a checkout session link
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCheckoutSession'
          description: ''
  /api/v1/accounts/structure/create-structure/:
    post:
      operationId: accounts_structure_create_structure_create
      description: Create a structure
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Structure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Structure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Structure'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Structure'
          description: ''
  /api/v1/accounts/structures/:
    get:
      operationId: accounts_structures_list
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: query
        name: address
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructureRoom'
          description: ''
    post:
      operationId: accounts_structures_create
      description: A viewset for viewing and editing structure instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructureRoom'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
  /api/v1/accounts/structures/{id}/:
    get:
      operationId: accounts_structures_retrieve
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
    put:
      operationId: accounts_structures_update
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructureRoom'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
    patch:
      operationId: accounts_structures_partial_update
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStructureRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStructureRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStructureRoom'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
    delete:
      operationId: accounts_structures_destroy
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/structures/{id}/images/:
    get:
      operationId: accounts_structures_images_retrieve
      description: Get all images of a structure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureImage'
          description: ''
  /api/v1/accounts/structures/{id}/images/add/:
    post:
      operationId: accounts_structures_images_add_create
      description: Add an image to a structure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructureImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructureImage'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureImage'
          description: ''
  /api/v1/accounts/structures/images/{id}/delete/:
    delete:
      operationId: accounts_structures_images_delete_destroy
      description: Delete an image from a structure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/upload-data-dms-puglia-xml/:
    post:
      operationId: accounts_upload_data_dms_puglia_xml_create
      description: API to generate and upload the DMS Puglia XML file for the Movimenti.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Movimento'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Movimento'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Movimento'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Movimento'
          description: ''
  /api/v1/accounts/users/:
    get:
      operationId: accounts_users_retrieve
      description: List all users or create a new user
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/accounts/users/{id}/:
    get:
      operationId: accounts_users_retrieve_2
      description: Get the user instance by primary key
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: accounts_users_update
      description: Update the user instance by primary key
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: accounts_users_destroy
      description: |-
        Delete the user instance by primary key.
        It is a physical delete.
        The user can only delete their profile if they have no active reservations.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/users/add-admin/:
    post:
      operationId: accounts_users_add_admin_create
      description: |-
        Add an admin type user
        With a post request and his verified email,
        an existing user can be made an admin type user
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/accounts/users/complete-profile/:
    put:
      operationId: accounts_users_complete_profile_update
      description: Complete the user's profile
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompleteProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompleteProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteProfile'
          description: ''
  /api/v1/accounts/users/remove-admin/:
    post:
      operationId: accounts_users_remove_admin_create
      description: |-
        Remove an admin type user
        With a post request and his verified email,
        an existing admin user can be made a customer type user
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password-reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password-reset-confirm/{uidb64}/{token}/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/:
    post:
      operationId: auth_registration_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/resend-email-verification/:
    post:
      operationId: auth_registration_resend_email_verification_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/verify-email/:
    post:
      operationId: auth_registration_verify_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/token/:
    post:
      operationId: auth_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomTokenObtainPair'
          description: ''
  /api/v1/auth/token/refresh/:
    post:
      operationId: auth_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/v1/auth/token/verify/:
    post:
      operationId: auth_token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenVerify'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenVerify'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenVerify'
          description: ''
components:
  schemas:
    Arrivo:
      type: object
      properties:
        codice_cliente_sr:
          type: string
          maxLength: 20
        sesso:
          $ref: '#/components/schemas/SessoE07Enum'
        cittadinanza:
          type: string
          maxLength: 9
        comune_residenza:
          type: string
          maxLength: 9
        occupazione_postoletto:
          $ref: '#/components/schemas/OccupazionePostoLettoEnum'
        dayuse:
          $ref: '#/components/schemas/OccupazionePostoLettoEnum'
        tipologia_alloggiato:
          type: string
          maxLength: 2
        eta:
          type: integer
          minimum: 0
        durata_soggiorno:
          type: integer
          minimum: 1
        mezzo_trasporto_arrivo:
          type: string
          maxLength: 50
        mezzo_trasporto_movimento:
          type: string
          maxLength: 50
        motivazioni_viaggio:
          type: string
          maxLength: 50
        componenti:
          type: array
          items:
            $ref: '#/components/schemas/Componente'
      required:
      - cittadinanza
      - codice_cliente_sr
      - dayuse
      - eta
      - occupazione_postoletto
      - sesso
      - tipologia_alloggiato
    AvailableRoomsForDates:
      type: object
      description: Serializer for rooms available for specific dates.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        room_status:
          $ref: '#/components/schemas/RoomStatusEnum'
        services:
          type: string
        cost_per_night:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_people:
          type: integer
          maximum: 2147483647
          minimum: 0
        structure:
          allOf:
          - $ref: '#/components/schemas/Structure'
          readOnly: true
      required:
      - cost_per_night
      - id
      - max_people
      - name
      - structure
    CalculateDiscount:
      type: object
      description: Serializer for calculating the discount for a reservation.
      properties:
        reservation:
          type: string
          format: uuid
        discount_code:
          type: string
          maxLength: 50
      required:
      - discount_code
      - reservation
    CancelReservation:
      type: object
      description: Serializer for canceling a reservation.
      properties:
        reservation_id:
          type: string
          format: uuid
      required:
      - reservation_id
    CategoryEnum:
      enum:
      - tipo_alloggiato
      - comune_di_nascita
      - stato_di_nascita
      - cittadinanza
      - tipo_documento
      - luogo_rilascio_documento
      type: string
      description: |-
        * `tipo_alloggiato` - Tipo Alloggiato
        * `comune_di_nascita` - Comune di Nascita
        * `stato_di_nascita` - Stato di Nascita
        * `cittadinanza` - Cittadinanza
        * `tipo_documento` - Tipo Documento
        * `luogo_rilascio_documento` - Luogo Rilascio Documento
    CheckinCategoryChoices:
      type: object
      description: Serializer for the CheckinCategoryChoices model.
      properties:
        id:
          type: integer
          readOnly: true
        category:
          $ref: '#/components/schemas/CategoryEnum'
        codice:
          type: string
          nullable: true
          maxLength: 10
        descrizione:
          type: string
          maxLength: 100
      required:
      - category
      - descrizione
      - id
    CompleteProfile:
      type: object
      description: Serializer for completing a user's profile.
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        telephone:
          type: string
          nullable: true
          maxLength: 20
        has_accepted_terms:
          type: boolean
    Componente:
      type: object
      properties:
        codice_cliente_sr:
          type: string
          maxLength: 20
        sesso:
          $ref: '#/components/schemas/SessoE07Enum'
        cittadinanza:
          type: string
          maxLength: 9
        paese_residenza:
          type: string
          maxLength: 9
        comune_residenza:
          type: string
          maxLength: 9
        occupazione_posto_letto:
          $ref: '#/components/schemas/OccupazionePostoLettoEnum'
        eta:
          type: integer
          minimum: 0
      required:
      - cittadinanza
      - codice_cliente_sr
      - eta
      - occupazione_posto_letto
      - sesso
    CreateCheckoutSession:
      type: object
      description: Serializer for creating a Stripe checkout session.
      properties:
        reservation_id:
          type: string
          format: uuid
      required:
      - reservation_id
    CustomTokenObtainPair:
      type: object
      description: |-
        Custom token serializer to use custom claims.
        Use email instead of username for authentication.
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Discount:
      type: object
      description: Serializer for the Discount model.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        description:
          type: string
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        numbers_of_nights:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        rooms:
          type: array
          items:
            type: integer
      required:
      - code
      - created_at
      - discount
      - end_date
      - id
      - numbers_of_nights
      - rooms
      - start_date
    DmsPugliaXml:
      type: object
      description: Serializer for the DmsPugliaXml model.
      properties:
        id:
          type: integer
          readOnly: true
        xml:
          type: string
          format: uri
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - id
      - xml
    Email:
      type: object
      description: Serializer for the email field.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Movimento:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/MovimentoTypeEnum'
        data:
          type: string
          format: date
        arrivi:
          type: array
          items:
            $ref: '#/components/schemas/Arrivo'
        partenze:
          type: array
          items:
            type: string
            maxLength: 20
        dati_struttura:
          type: object
          additionalProperties:
            type: integer
      required:
      - arrivi
      - data
      - type
    MovimentoTypeEnum:
      enum:
      - MP
      type: string
      description: '* `MP` - Movement'
    OccupazionePostoLettoEnum:
      enum:
      - si
      - 'no'
      type: string
      description: |-
        * `si` - Yes
        * `no` - No
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedDiscount:
      type: object
      description: Serializer for the Discount model.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        description:
          type: string
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        numbers_of_nights:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        rooms:
          type: array
          items:
            type: integer
    PatchedReservation:
      type: object
      description: Serializer for the Reservation model.
      properties:
        id:
          type: integer
          readOnly: true
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        number_of_people:
          type: integer
          maximum: 2147483647
          minimum: 0
        discount:
          allOf:
          - $ref: '#/components/schemas/Discount'
          readOnly: true
        first_name_on_reservation:
          type: string
          maxLength: 100
        last_name_on_reservation:
          type: string
          maxLength: 100
        email_on_reservation:
          type: string
          format: email
          maxLength: 254
        phone_on_reservation:
          type: string
          maxLength: 20
        coupon_used:
          type: string
          maxLength: 20
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        total_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        reservation_id:
          type: string
          format: uuid
          readOnly: true
        payment_intent_id:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ReservationStatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRoom:
      type: object
      description: Serializer for the Room model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        room_status:
          $ref: '#/components/schemas/RoomStatusEnum'
        services:
          type: string
        cost_per_night:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_people:
          type: integer
          maximum: 2147483647
          minimum: 0
        structure:
          type: integer
        calendar_id:
          type: string
          readOnly: true
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/RoomImage'
    PatchedStructureRoom:
      type: object
      description: Serializer for the Structure model with associated rooms.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        address:
          type: string
          maxLength: 200
        cis:
          type: string
          maxLength: 20
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/StructureImage'
          readOnly: true
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
      - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Reservation:
      type: object
      description: Serializer for the Reservation model.
      properties:
        id:
          type: integer
          readOnly: true
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        number_of_people:
          type: integer
          maximum: 2147483647
          minimum: 0
        discount:
          allOf:
          - $ref: '#/components/schemas/Discount'
          readOnly: true
        first_name_on_reservation:
          type: string
          maxLength: 100
        last_name_on_reservation:
          type: string
          maxLength: 100
        email_on_reservation:
          type: string
          format: email
          maxLength: 254
        phone_on_reservation:
          type: string
          maxLength: 20
        coupon_used:
          type: string
          maxLength: 20
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
        room_id:
          type: integer
          writeOnly: true
        total_cost:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        reservation_id:
          type: string
          format: uuid
          readOnly: true
        payment_intent_id:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/ReservationStatusEnum'
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - check_in
      - check_out
      - created_at
      - discount
      - email_on_reservation
      - first_name_on_reservation
      - id
      - last_name_on_reservation
      - number_of_people
      - payment_intent_id
      - phone_on_reservation
      - reservation_id
      - room
      - room_id
      - status
      - total_cost
      - user
    ReservationStatusEnum:
      enum:
      - UNPAID
      - PAID
      - CANCELED
      type: string
      description: |-
        * `UNPAID` - Unpaid
        * `PAID` - Paid
        * `CANCELED` - Canceled
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Room:
      type: object
      description: Serializer for the Room model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        room_status:
          $ref: '#/components/schemas/RoomStatusEnum'
        services:
          type: string
        cost_per_night:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_people:
          type: integer
          maximum: 2147483647
          minimum: 0
        structure:
          type: integer
        calendar_id:
          type: string
          readOnly: true
          nullable: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/RoomImage'
      required:
      - calendar_id
      - cost_per_night
      - id
      - max_people
      - name
      - structure
    RoomImage:
      type: object
      description: Serializer for the StructureImage model.
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          readOnly: true
        alt:
          type: string
          maxLength: 100
        room:
          type: integer
      required:
      - id
      - image
      - room
    RoomStatusEnum:
      enum:
      - AVAILABLE
      - UNAVAILABLE
      type: string
      description: |-
        * `AVAILABLE` - Available
        * `UNAVAILABLE` - Unavailable
    Schedina:
      type: object
      description: |-
        Serializer for handling individual guest registration forms (Schedina).
        This serializer will create a single string representing the entire schedina.
      properties:
        tipo_alloggiati:
          type: string
          maxLength: 2
        data_arrivo:
          type: string
          format: date
        numero_giorni_permanenza:
          type: integer
          maximum: 30
          minimum: 1
        cognome:
          type: string
          maxLength: 50
        nome:
          type: string
          maxLength: 30
        sesso:
          $ref: '#/components/schemas/SchedinaSessoEnum'
        data_nascita:
          type: string
          format: date
        comune_nascita:
          type: string
          maxLength: 9
        provincia_nascita:
          type: string
          maxLength: 2
        stato_nascita:
          type: string
          maxLength: 9
        cittadinanza:
          type: string
          maxLength: 9
        tipo_documento:
          type: string
          maxLength: 5
        numero_documento:
          type: string
          maxLength: 20
        luogo_rilascio_documento:
          type: string
          maxLength: 9
      required:
      - cittadinanza
      - cognome
      - data_arrivo
      - data_nascita
      - nome
      - numero_giorni_permanenza
      - sesso
      - stato_nascita
      - tipo_alloggiati
    SchedinaSessoEnum:
      enum:
      - '1'
      - '2'
      type: string
      description: |-
        * `1` - M
        * `2` - F
    SendElencoSchedine:
      type: object
      description: Serializer for generating XML and sending it to a DMS.
      properties:
        utente:
          type: string
          readOnly: true
        token:
          type: string
          readOnly: true
        elenco_schedine:
          type: array
          items:
            $ref: '#/components/schemas/Schedina'
        structure_id:
          type: integer
      required:
      - elenco_schedine
      - structure_id
      - token
      - utente
    SendWhatsAppToAllUsers:
      type: object
      properties:
        message:
          type: string
          maxLength: 4096
      required:
      - message
    SessoE07Enum:
      enum:
      - M
      - F
      type: string
      description: |-
        * `M` - Male
        * `F` - Female
    Structure:
      type: object
      description: Serializer for the Structure model.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        address:
          type: string
          maxLength: 200
        cis:
          type: string
          maxLength: 20
        images:
          type: array
          items:
            $ref: '#/components/schemas/StructureImage'
      required:
      - address
      - cis
      - id
      - name
    StructureImage:
      type: object
      description: Serializer for the StructureImage model.
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          readOnly: true
        alt:
          type: string
          maxLength: 100
        structure:
          type: integer
      required:
      - id
      - image
      - structure
    StructureRoom:
      type: object
      description: Serializer for the Structure model with associated rooms.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        address:
          type: string
          maxLength: 200
        cis:
          type: string
          maxLength: 20
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
          readOnly: true
        images:
          type: array
          items:
            $ref: '#/components/schemas/StructureImage'
          readOnly: true
      required:
      - address
      - cis
      - id
      - images
      - name
      - rooms
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
    TokenVerify:
      type: object
      properties:
        token:
          type: string
          writeOnly: true
      required:
      - token
    User:
      type: object
      description: Serializer for the User model.
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        telephone:
          type: string
          nullable: true
          maxLength: 20
        status:
          $ref: '#/components/schemas/UserStatusEnum'
        type:
          $ref: '#/components/schemas/UserTypeEnum'
        has_accepted_terms:
          type: boolean
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    UserStatusEnum:
      enum:
      - COMPLETE
      - PENDING_EXTRA_DATA
      type: string
      description: |-
        * `COMPLETE` - Complete
        * `PENDING_EXTRA_DATA` - Pending Complete Data
    UserTypeEnum:
      enum:
      - CUSTOMER
      - ADMIN
      type: string
      description: |-
        * `CUSTOMER` - Customer
        * `ADMIN` - Admin
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
