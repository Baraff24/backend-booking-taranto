openapi: 3.0.3
info:
  title: Backend Booking Taranto APIs
  version: 1.0.0
  description: GM Apartments Booking Taranto APIs
paths:
  /api/v1/accounts/cancel-reservation/:
    post:
      operationId: accounts_cancel_reservation_create
      description: Cancel a reservation and process a refund
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/accounts/discounts/:
    get:
      operationId: accounts_discounts_list
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: query
        name: code
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Discount'
          description: ''
    post:
      operationId: accounts_discounts_create
      description: A viewset for viewing and editing discount instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
  /api/v1/accounts/discounts/{id}/:
    get:
      operationId: accounts_discounts_retrieve
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    put:
      operationId: accounts_discounts_update
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Discount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Discount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Discount'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    patch:
      operationId: accounts_discounts_partial_update
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiscount'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Discount'
          description: ''
    delete:
      operationId: accounts_discounts_destroy
      description: A viewset for viewing and editing discount instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this discount.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/google-calendar/init/:
    get:
      operationId: accounts_google_calendar_init_retrieve
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/google-calendar/redirect/:
    get:
      operationId: accounts_google_calendar_redirect_retrieve
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/reservations/:
    get:
      operationId: accounts_reservations_list
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: query
        name: check_in
        schema:
          type: string
          format: date
      - in: query
        name: check_out
        schema:
          type: string
          format: date
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: room
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: integer
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
          description: ''
    post:
      operationId: accounts_reservations_create
      description: A viewset for viewing and editing reservation instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/v1/accounts/reservations/{id}/:
    get:
      operationId: accounts_reservations_retrieve
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    put:
      operationId: accounts_reservations_update
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    patch:
      operationId: accounts_reservations_partial_update
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedReservation'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
    delete:
      operationId: accounts_reservations_destroy
      description: A viewset for viewing and editing reservation instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this reservation.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/room/available-rooms/:
    get:
      operationId: accounts_room_available_rooms_retrieve
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailableRooms'
          description: ''
  /api/v1/accounts/room/rent-room/:
    post:
      operationId: accounts_room_rent_room_create
      description: Rent a room
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reservation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reservation'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
          description: ''
  /api/v1/accounts/rooms/:
    get:
      operationId: accounts_rooms_list
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: query
        name: cost_per_night
        schema:
          type: number
      - in: query
        name: max_people
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: structure
        schema:
          type: integer
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Room'
          description: ''
    post:
      operationId: accounts_rooms_create
      description: A viewset for viewing and editing room instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
  /api/v1/accounts/rooms/{id}/:
    get:
      operationId: accounts_rooms_retrieve
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    put:
      operationId: accounts_rooms_update
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Room'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Room'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Room'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    patch:
      operationId: accounts_rooms_partial_update
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRoom'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Room'
          description: ''
    delete:
      operationId: accounts_rooms_destroy
      description: A viewset for viewing and editing room instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this room.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/stripe-webhook/:
    post:
      operationId: accounts_stripe_webhook_create
      description: API to handle Stripe webhooks
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /api/v1/accounts/stripe/create-checkout-session/:
    post:
      operationId: accounts_stripe_create_checkout_session_create
      description: Create a checkout session link
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateCheckoutSession'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCheckoutSession'
          description: ''
  /api/v1/accounts/structure/create-structure/:
    post:
      operationId: accounts_structure_create_structure_create
      description: Create a structure
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Structure'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Structure'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Structure'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Structure'
          description: ''
  /api/v1/accounts/structures/:
    get:
      operationId: accounts_structures_list
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: query
        name: address
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StructureRoom'
          description: ''
    post:
      operationId: accounts_structures_create
      description: A viewset for viewing and editing structure instances.
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructureRoom'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
  /api/v1/accounts/structures/{id}/:
    get:
      operationId: accounts_structures_retrieve
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
    put:
      operationId: accounts_structures_update
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructureRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructureRoom'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
    patch:
      operationId: accounts_structures_partial_update
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStructureRoom'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStructureRoom'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStructureRoom'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureRoom'
          description: ''
    delete:
      operationId: accounts_structures_destroy
      description: A viewset for viewing and editing structure instances.
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this structure.
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/accounts/structures/{id}/images/:
    post:
      operationId: accounts_structures_images_create
      description: Add an image to a structure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StructureImage'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StructureImage'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StructureImage'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StructureImage'
          description: ''
  /api/v1/accounts/structures/images/{id}/:
    delete:
      operationId: accounts_structures_images_destroy
      description: Delete an image from a structure
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/users/:
    get:
      operationId: accounts_users_retrieve
      description: Get all users if the user is a superuser
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/accounts/users/{id}/:
    get:
      operationId: accounts_users_retrieve_2
      description: Get the user instance by primary key
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: accounts_users_update
      description: Update the user instance by primary key
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: accounts_users_destroy
      description: |-
        Delete the user instance by primary key.
        It is not a physical delete, but a logical delete (change of status).
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - accounts
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/accounts/users/add-admin/:
    post:
      operationId: accounts_users_add_admin_create
      description: |-
        Add an admin type user
        With a post request and his verified email,
        an existing user can be made an admin type user
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Email'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Email'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Email'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Email'
          description: ''
  /api/v1/accounts/users/complete-profile/:
    put:
      operationId: accounts_users_complete_profile_update
      description: Complete the user's profile
      tags:
      - accounts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompleteProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CompleteProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CompleteProfile'
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteProfile'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: auth_login_create
      description: |-
        Check the credentials and return the REST Token
        if the credentials are valid and authenticated.
        Calls Django Auth login method to register User ID
        in Django session framework

        Accept the following POST parameters: username, password
        Return the REST Framework Token Object's key.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: auth_logout_create
      description: |-
        Calls Django logout method and delete the Token object
        assigned to the current User object.

        Accepts/Returns nothing.
      tags:
      - auth
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password-reset/:
    post:
      operationId: auth_password_reset_create
      description: |-
        Calls Django Auth PasswordResetForm save method.

        Accepts the following POST parameters: email
        Returns the success/fail message.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordReset'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/password-reset-confirm/{uidb64}/{token}/:
    post:
      operationId: auth_password_reset_confirm_create
      description: |-
        Password reset e-mail link is confirmed, therefore
        this resets the user's password.

        Accepts the following POST parameters: token, uid,
            new_password1, new_password2
        Returns the success/fail message.
      parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
      - in: path
        name: uidb64
        schema:
          type: string
        required: true
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/:
    post:
      operationId: auth_registration_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/resend-email-verification/:
    post:
      operationId: auth_registration_resend_email_verification_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResendEmailVerification'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
  /api/v1/auth/registration/verify-email/:
    post:
      operationId: auth_registration_verify_email_create
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyEmail'
        required: true
      security:
      - basicAuth: []
      - cookieAuth: []
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RestAuthDetail'
          description: ''
components:
  schemas:
    AvailableRooms:
      type: object
      description: Serializer for the Room model
      properties:
        structure_room:
          allOf:
          - $ref: '#/components/schemas/StructureRoom'
          readOnly: true
        available_dates:
          type: array
          items:
            type: string
            format: date
      required:
      - available_dates
      - structure_room
    CompleteProfile:
      type: object
      description: Serializer for the User model to complete profile
      properties:
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        telephone:
          type: string
          nullable: true
          maxLength: 20
    CreateCheckoutSession:
      type: object
      properties:
        room:
          type: integer
        reservation:
          type: integer
        number_of_people:
          type: integer
      required:
      - number_of_people
      - reservation
      - room
    Discount:
      type: object
      description: Serializer for the Discount model
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        description:
          type: string
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        numbers_of_nights:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        rooms:
          type: array
          items:
            type: integer
      required:
      - code
      - created_at
      - discount
      - end_date
      - id
      - numbers_of_nights
      - rooms
      - start_date
    Email:
      type: object
      description: Serializer for the email field
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Login:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - password
    PasswordReset:
      type: object
      description: Serializer for requesting a password reset e-mail.
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      description: Serializer for confirming a password reset attempt.
      properties:
        new_password1:
          type: string
          maxLength: 128
        new_password2:
          type: string
          maxLength: 128
        uid:
          type: string
        token:
          type: string
      required:
      - new_password1
      - new_password2
      - token
      - uid
    PatchedDiscount:
      type: object
      description: Serializer for the Discount model
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          maxLength: 20
        description:
          type: string
        discount:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
        numbers_of_nights:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        created_at:
          type: string
          format: date-time
          readOnly: true
        rooms:
          type: array
          items:
            type: integer
    PatchedReservation:
      type: object
      description: Serializer for the Reservation model
      properties:
        id:
          type: integer
          readOnly: true
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        number_of_people:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        discount:
          allOf:
          - $ref: '#/components/schemas/Discount'
          readOnly: true
        first_name_on_reservation:
          type: string
          maxLength: 100
        last_name_on_reservation:
          type: string
          maxLength: 100
        email_on_reservation:
          type: string
          format: email
          maxLength: 254
        phone_on_reservation:
          type: string
          maxLength: 20
        coupon_used:
          type: string
          maxLength: 20
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
    PatchedRoom:
      type: object
      description: Serializer for the Room model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        room_status:
          $ref: '#/components/schemas/RoomStatusEnum'
        services:
          type: string
        cost_per_night:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_people:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        structure:
          type: integer
    PatchedStructureRoom:
      type: object
      description: Serializer for the Structure model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        address:
          type: string
          maxLength: 200
        cis:
          type: string
          maxLength: 20
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
          readOnly: true
        structure_images:
          type: array
          items:
            $ref: '#/components/schemas/StructureImage'
          readOnly: true
    Register:
      type: object
      properties:
        username:
          type: string
          maxLength: 150
          minLength: 1
        email:
          type: string
          format: email
        password1:
          type: string
          writeOnly: true
        password2:
          type: string
          writeOnly: true
      required:
      - email
      - password1
      - password2
      - username
    ResendEmailVerification:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    Reservation:
      type: object
      description: Serializer for the Reservation model
      properties:
        id:
          type: integer
          readOnly: true
        check_in:
          type: string
          format: date
        check_out:
          type: string
          format: date
        number_of_people:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        discount:
          allOf:
          - $ref: '#/components/schemas/Discount'
          readOnly: true
        first_name_on_reservation:
          type: string
          maxLength: 100
        last_name_on_reservation:
          type: string
          maxLength: 100
        email_on_reservation:
          type: string
          format: email
          maxLength: 254
        phone_on_reservation:
          type: string
          maxLength: 20
        coupon_used:
          type: string
          maxLength: 20
        user:
          allOf:
          - $ref: '#/components/schemas/User'
          readOnly: true
        room:
          allOf:
          - $ref: '#/components/schemas/Room'
          readOnly: true
      required:
      - check_in
      - check_out
      - discount
      - email_on_reservation
      - first_name_on_reservation
      - id
      - last_name_on_reservation
      - number_of_people
      - phone_on_reservation
      - room
      - user
    RestAuthDetail:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Room:
      type: object
      description: Serializer for the Room model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        room_status:
          $ref: '#/components/schemas/RoomStatusEnum'
        services:
          type: string
        cost_per_night:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        max_people:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        structure:
          type: integer
      required:
      - cost_per_night
      - id
      - max_people
      - name
      - structure
    RoomStatusEnum:
      enum:
      - AVAILABLE
      - UNAVAILABLE
      type: string
      description: |-
        * `AVAILABLE` - Available
        * `UNAVAILABLE` - Unavailable
    StatusEnum:
      enum:
      - COMPLETE
      - PENDING_EXTRA_DATA
      type: string
      description: |-
        * `COMPLETE` - Complete
        * `PENDING_EXTRA_DATA` - Pending Complete Data
    Structure:
      type: object
      description: Serializer for the Structure model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        address:
          type: string
          maxLength: 200
        cis:
          type: string
          maxLength: 20
        images:
          type: array
          items:
            $ref: '#/components/schemas/StructureImage'
      required:
      - address
      - cis
      - id
      - name
    StructureImage:
      type: object
      description: Serializer for the StructureImage model
      properties:
        id:
          type: integer
          readOnly: true
        image:
          type: string
          format: uri
        description:
          type: string
          maxLength: 100
        structure:
          type: integer
      required:
      - id
      - image
      - structure
    StructureRoom:
      type: object
      description: Serializer for the Structure model
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        description:
          type: string
        address:
          type: string
          maxLength: 200
        cis:
          type: string
          maxLength: 20
        rooms:
          type: array
          items:
            $ref: '#/components/schemas/Room'
          readOnly: true
        structure_images:
          type: array
          items:
            $ref: '#/components/schemas/StructureImage'
          readOnly: true
      required:
      - address
      - cis
      - id
      - name
      - rooms
      - structure_images
    Token:
      type: object
      description: Serializer for Token model.
      properties:
        key:
          type: string
          maxLength: 40
      required:
      - key
    TypeEnum:
      enum:
      - CUSTOMER
      - ADMIN
      type: string
      description: |-
        * `CUSTOMER` - Customer
        * `ADMIN` - Admin
    User:
      type: object
      description: Serializer for the User model
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 150
        telephone:
          type: string
          nullable: true
          maxLength: 20
        status:
          $ref: '#/components/schemas/StatusEnum'
        type:
          $ref: '#/components/schemas/TypeEnum'
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - id
      - password
      - username
    VerifyEmail:
      type: object
      properties:
        key:
          type: string
          writeOnly: true
      required:
      - key
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
